import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime

df=pd.read_csv(r"C:\Users\Dell\Desktop\E-commerce\E_commerce_DescAnalysis.csv",encoding='ISO-8859-1').copy()

#Data Cleaning

df.dropna(subset=['CustomerID'],inplace=True)
df['CustomerID']=df['CustomerID'].astype(int)
df['Description'].fillna('NO DESCRIPTION',inplace=True)
df['InvoiceDate']=pd.to_datetime(df['InvoiceDate'])

df=df[(df['Quantity']>0) & (df['UnitPrice']>0)].copy()
quan_out=df['Quantity'].quantile(0.99)
unit_out=df['UnitPrice'].quantile(0.99)
df=df[(df['Quantity']<=quan_out) & (df['UnitPrice']<=unit_out)].copy()
print(df.head())

print(df.isnull().sum())
print(df.dtypes)
print((df['Quantity']<0).any() , (df['UnitPrice']<0).any())
print(df['Quantity'].max() , df['UnitPrice'].max())
#result=df.dtypes
#print(result)
#result.to_csv(r"C:\Users\Dell\Desktop\E-commerce\E_commerce_head.csv")

sns.set(style='whitegrid')
plt.rcParams["figure.figsize"]=(10,6)

print("Summary Statistics for numerical features")
print(df.describe())

#Distribution Analysis

print("\n Distribution Analysis")

#Quantity Analysis

plt.figure(figsize=(10,6))
sns.histplot(df['Quantity'],bins=50,kde=False)
plt.title('Quantity Distribution')
plt.show()

#UnitPrice Analysis

plt.figure(figsize=(10,6))
sns.histplot(df['UnitPrice'],bins=50,kde=False)
plt.title('UnitPrice Distribution')
plt.show()

#time series analysis

print("\n Time series Analysis")

month_sale = df.set_index('InvoiceDate').resample('ME')['Quantity'].sum()
plt.figure(figsize=(10,6))
month_sale.plot()
plt.title('Month sales on Quantity')
plt.xlabel('Month')
plt.ylabel('Total Quantity Sold')
plt.show()

#Customer Analysis

print("\n Customer Analysis")
df['Total Spend']=df['Quantity'] * df['UnitPrice']
Top_Customers= df.groupby('CustomerID')['Total Spend'].sum().sort_values(ascending=False).head(10)
plt.figure(figsize=(10,6))
Top_Customers.plot(kind='bar')
plt.title('Top Customers Analysis')
plt.xlabel('Customer ID')
plt.ylabel('Total Spend')
plt.show()

#Product Analysis

print("\n Product Analysis")
Top_Products=df.groupby('Description')['Quantity'].sum().sort_values(ascending=False).head(10)
plt.figure(figsize=(10,6))
Top_Products.plot(kind='bar')
plt.title('Top Products')
plt.xlabel('Product')
plt.ylabel('Quantity')
plt.show()

#Geographical Analysis

print("\n Geographical analysis")
Sales_by_Country=df.groupby('Country')['Total Spend'].sum().sort_values(ascending=False).head(10)
plt.figure(figsize=(10,6))
Sales_by_Country.plot(kind='bar')
plt.title('Sales by country')
plt.xlabel('Country')
plt.ylabel('Total Spend')
plt.show()

#Sales Performance

print("\n Sales performance Analysis")

month_sale = df.set_index('InvoiceDate').resample('ME')['Total Spend'].sum()
plt.figure(figsize=(10,6))
month_sale.plot()
plt.title('Monthly Revenue')
plt.xlabel('Month')
plt.ylabel('Total Revenue')
plt.show()

#order analysis

print("\n order Analysis")
items_order=df.groupby('InvoiceNo')['Quantity'].sum()
plt.figure(figsize=(10,6))
sns.histplot(items_order,bins=50,kde=False)
plt.xlabel('Quantity')
plt.ylabel('Invoice No')
plt.show()

df.to_csv(r"C:\Users\Dell\Desktop\E-commerce\output.csv", index=False)

print("\n Analysis Completed")
